{"ast":null,"code":"var _jsxFileName = \"E:\\\\pcb-defect-detector\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Upload, Camera, AlertCircle, CheckCircle, Loader2, X, Shield, AlertTriangle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PCBDefectDetector = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [rawDetections, setRawDetections] = useState([]);\n  const [aggregatedPredictions, setAggregatedPredictions] = useState([]);\n  const [allClassesSummary, setAllClassesSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 640,\n    height: 640\n  });\n  const [totalDetections, setTotalDetections] = useState(0);\n  const fileInputRef = useRef(null);\n  const defectColors = {\n    missing_hole: '#FF6B6B',\n    mouse_bite: '#4ECDC4',\n    open_circuit: '#45B7D1',\n    short: '#FFA07A',\n    spur: '#98D8C8',\n    spurious_copper: '#F7DC6F'\n  };\n  const severityColors = {\n    High: '#DC2626',\n    Medium: '#D97706',\n    Low: '#059669',\n    None: '#6B7280'\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n        setImagePreview(e.target.result);\n        setRawDetections([]);\n        setAggregatedPredictions([]);\n        setAllClassesSummary([]);\n        setError(null);\n        setTotalDetections(0);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const detectDefects = async () => {\n    if (!image) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      const blob = await fetch(image).then(res => res.blob());\n      formData.append('image', blob, 'pcb_image.png');\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setRawDetections(data.raw_detections || []);\n        setAggregatedPredictions(data.aggregated_predictions || []);\n        setAllClassesSummary(data.all_classes_summary || []);\n        setTotalDetections(data.total_detections || 0);\n\n        // Set actual image dimensions from backend\n        if (data.image_dimensions) {\n          setImageDimensions(data.image_dimensions);\n        }\n      } else {\n        setError(data.error || 'Detection failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to the backend. Make sure Flask server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearImage = () => {\n    setImage(null);\n    setImagePreview(null);\n    setRawDetections([]);\n    setAggregatedPredictions([]);\n    setAllClassesSummary([]);\n    setError(null);\n    setTotalDetections(0);\n    setImageDimensions({\n      width: 640,\n      height: 640\n    });\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const getBoundingBoxStyle = (bbox, imageElement) => {\n    if (!imageElement) return {};\n    const imageRect = imageElement.getBoundingClientRect();\n    const scaleX = imageRect.width / imageDimensions.width;\n    const scaleY = imageRect.height / imageDimensions.height;\n    return {\n      position: 'absolute',\n      left: bbox.x1 * scaleX,\n      top: bbox.y1 * scaleY,\n      width: (bbox.x2 - bbox.x1) * scaleX,\n      height: (bbox.y2 - bbox.y1) * scaleY,\n      border: `2px solid ${defectColors[bbox.class] || '#FF0000'}`,\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      pointerEvents: 'none'\n    };\n  };\n  const getStatusIcon = (isPresent, severity) => {\n    if (!isPresent) return /*#__PURE__*/_jsxDEV(CheckCircle, {\n      className: \"text-green-500\",\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 28\n    }, this);\n    if (severity === 'High') return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n      className: \"text-red-500\",\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }, this);\n    if (severity === 'Medium') return /*#__PURE__*/_jsxDEV(AlertCircle, {\n      className: \"text-yellow-500\",\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 39\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Shield, {\n      className: \"text-blue-500\",\n      size: 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }, this);\n  };\n  const getOverallStatus = () => {\n    const presentDefects = allClassesSummary.filter(item => item.is_present);\n    const highSeverity = presentDefects.filter(item => item.severity === 'High').length;\n    const mediumSeverity = presentDefects.filter(item => item.severity === 'Medium').length;\n    if (presentDefects.length === 0) return {\n      status: 'PASS',\n      color: 'green',\n      message: 'No defects detected'\n    };\n    if (highSeverity > 0) return {\n      status: 'FAIL',\n      color: 'red',\n      message: `${highSeverity} high severity defect(s)`\n    };\n    if (mediumSeverity > 0) return {\n      status: 'WARNING',\n      color: 'yellow',\n      message: `${mediumSeverity} medium severity defect(s)`\n    };\n    return {\n      status: 'MINOR',\n      color: 'blue',\n      message: 'Minor defects detected'\n    };\n  };\n  const overallStatus = getOverallStatus();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-800 mb-2 flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Camera, {\n            className: \"text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), \"PCB Defect Detection System\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: \"Upload a PCB image to detect defects: missing holes, mouse bites, open circuits, shorts, spurs, and spurious copper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), \"Upload PCB Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageUpload,\n                className: \"hidden\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), image && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearImage,\n              className: \"flex items-center gap-2 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(X, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), \"Clear\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 bg-red-100 text-red-700 p-3 rounded-lg mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 xl:grid-cols-3 gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xl:col-span-1 space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"pcb-image\",\n                src: imagePreview,\n                alt: \"PCB\",\n                className: \"w-full max-w-md h-auto rounded-lg shadow-md\",\n                style: {\n                  maxHeight: '400px',\n                  objectFit: 'contain'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), rawDetections.map((detection, index) => {\n                const imageElement = document.getElementById('pcb-image');\n                const boxStyle = getBoundingBoxStyle(detection.bbox, imageElement);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: boxStyle,\n                  className: \"pointer-events-none\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute -top-6 left-0 text-xs font-bold px-1 py-0.5 rounded text-white whitespace-nowrap\",\n                    style: {\n                      backgroundColor: defectColors[detection.class] || '#FF0000'\n                    },\n                    children: [detection.class ? detection.class.replace('_', ' ') : 'Unknown', \" (\", (detection.confidence * 100).toFixed(1), \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: detectDefects,\n              disabled: loading,\n              className: \"w-full bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\",\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                  className: \"animate-spin\",\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), \"Detecting Defects...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), \"Detect Defects\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xl:col-span-2 space-y-6\",\n            children: [allClassesSummary.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-4 rounded-lg border-2 ${overallStatus.color === 'green' ? 'bg-green-50 border-green-200' : overallStatus.color === 'red' ? 'bg-red-50 border-red-200' : overallStatus.color === 'yellow' ? 'bg-yellow-50 border-yellow-200' : 'bg-blue-50 border-blue-200'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `text-2xl font-bold ${overallStatus.color === 'green' ? 'text-green-600' : overallStatus.color === 'red' ? 'text-red-600' : overallStatus.color === 'yellow' ? 'text-yellow-600' : 'text-blue-600'}`,\n                  children: overallStatus.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-gray-700\",\n                  children: overallStatus.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mt-2\",\n                children: [\"Total raw detections: \", totalDetections]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), allClassesSummary.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold text-gray-800\",\n                children: \"Defect Analysis Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n                children: allClassesSummary.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `p-4 rounded-lg border-2 ${item.is_present ? 'bg-red-50 border-red-200' : 'bg-green-50 border-green-200'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center justify-between mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex items-center gap-2\",\n                      children: [getStatusIcon(item.is_present, item.severity), /*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"font-semibold text-gray-800 capitalize\",\n                        children: item.class.replace('_', ' ')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `text-sm font-medium px-2 py-1 rounded ${item.severity === 'High' ? 'bg-red-100 text-red-800' : item.severity === 'Medium' ? 'bg-yellow-100 text-yellow-800' : item.severity === 'Low' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'}`,\n                      children: item.severity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600\",\n                    children: item.is_present ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [\"Max Confidence: \", (item.confidence * 100).toFixed(1), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [\"Avg Confidence: \", (item.average_confidence * 100).toFixed(1), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 304,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [\"Detections: \", item.detection_count]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 305,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"No defects detected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 27\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold text-gray-800 mb-3\",\n                children: \"Defect Types Legend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 md:grid-cols-3 gap-2\",\n                children: Object.entries(defectColors).map(([defect, color]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-4 h-4 rounded border\",\n                    style: {\n                      backgroundColor: color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm capitalize\",\n                    children: defect.replace('_', ' ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 25\n                  }, this)]\n                }, defect, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(PCBDefectDetector, \"2KxQcSA/kLP8gVZJ8yMRbN9bfjA=\");\n_c = PCBDefectDetector;\nexport default PCBDefectDetector;\nvar _c;\n$RefreshReg$(_c, \"PCBDefectDetector\");","map":{"version":3,"names":["React","useState","useRef","Upload","Camera","AlertCircle","CheckCircle","Loader2","X","Shield","AlertTriangle","jsxDEV","_jsxDEV","Fragment","_Fragment","PCBDefectDetector","_s","image","setImage","imagePreview","setImagePreview","rawDetections","setRawDetections","aggregatedPredictions","setAggregatedPredictions","allClassesSummary","setAllClassesSummary","loading","setLoading","error","setError","imageDimensions","setImageDimensions","width","height","totalDetections","setTotalDetections","fileInputRef","defectColors","missing_hole","mouse_bite","open_circuit","short","spur","spurious_copper","severityColors","High","Medium","Low","None","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","detectDefects","formData","FormData","blob","fetch","then","res","append","response","method","body","data","json","ok","raw_detections","aggregated_predictions","all_classes_summary","total_detections","image_dimensions","err","console","clearImage","current","value","getBoundingBoxStyle","bbox","imageElement","imageRect","getBoundingClientRect","scaleX","scaleY","position","left","x1","top","y1","x2","y2","border","class","backgroundColor","pointerEvents","getStatusIcon","isPresent","severity","className","size","fileName","_jsxFileName","lineNumber","columnNumber","getOverallStatus","presentDefects","filter","item","is_present","highSeverity","length","mediumSeverity","status","color","message","overallStatus","children","ref","type","accept","onChange","onClick","id","src","alt","style","maxHeight","objectFit","map","detection","index","document","getElementById","boxStyle","replace","confidence","toFixed","disabled","average_confidence","detection_count","Object","entries","defect","_c","$RefreshReg$"],"sources":["E:/pcb-defect-detector/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Upload, Camera, AlertCircle, CheckCircle, Loader2, X, Shield, AlertTriangle } from 'lucide-react';\n\nconst PCBDefectDetector = () => {\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [rawDetections, setRawDetections] = useState([]);\n  const [aggregatedPredictions, setAggregatedPredictions] = useState([]);\n  const [allClassesSummary, setAllClassesSummary] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState({ width: 640, height: 640 });\n  const [totalDetections, setTotalDetections] = useState(0);\n  const fileInputRef = useRef(null);\n\n  const defectColors = {\n    missing_hole: '#FF6B6B',\n    mouse_bite: '#4ECDC4',\n    open_circuit: '#45B7D1',\n    short: '#FFA07A',\n    spur: '#98D8C8',\n    spurious_copper: '#F7DC6F'\n  };\n\n  const severityColors = {\n    High: '#DC2626',\n    Medium: '#D97706',\n    Low: '#059669',\n    None: '#6B7280'\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n        setImagePreview(e.target.result);\n        setRawDetections([]);\n        setAggregatedPredictions([]);\n        setAllClassesSummary([]);\n        setError(null);\n        setTotalDetections(0);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const detectDefects = async () => {\n    if (!image) return;\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const formData = new FormData();\n      const blob = await fetch(image).then(res => res.blob());\n      formData.append('image', blob, 'pcb_image.png');\n\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setRawDetections(data.raw_detections || []);\n        setAggregatedPredictions(data.aggregated_predictions || []);\n        setAllClassesSummary(data.all_classes_summary || []);\n        setTotalDetections(data.total_detections || 0);\n        \n        // Set actual image dimensions from backend\n        if (data.image_dimensions) {\n          setImageDimensions(data.image_dimensions);\n        }\n      } else {\n        setError(data.error || 'Detection failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to the backend. Make sure Flask server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearImage = () => {\n    setImage(null);\n    setImagePreview(null);\n    setRawDetections([]);\n    setAggregatedPredictions([]);\n    setAllClassesSummary([]);\n    setError(null);\n    setTotalDetections(0);\n    setImageDimensions({ width: 640, height: 640 });\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const getBoundingBoxStyle = (bbox, imageElement) => {\n    if (!imageElement) return {};\n    \n    const imageRect = imageElement.getBoundingClientRect();\n    const scaleX = imageRect.width / imageDimensions.width;\n    const scaleY = imageRect.height / imageDimensions.height;\n    \n    return {\n      position: 'absolute',\n      left: bbox.x1 * scaleX,\n      top: bbox.y1 * scaleY,\n      width: (bbox.x2 - bbox.x1) * scaleX,\n      height: (bbox.y2 - bbox.y1) * scaleY,\n      border: `2px solid ${defectColors[bbox.class] || '#FF0000'}`,\n      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n      pointerEvents: 'none'\n    };\n  };\n\n  const getStatusIcon = (isPresent, severity) => {\n    if (!isPresent) return <CheckCircle className=\"text-green-500\" size={20} />;\n    if (severity === 'High') return <AlertTriangle className=\"text-red-500\" size={20} />;\n    if (severity === 'Medium') return <AlertCircle className=\"text-yellow-500\" size={20} />;\n    return <Shield className=\"text-blue-500\" size={20} />;\n  };\n\n  const getOverallStatus = () => {\n    const presentDefects = allClassesSummary.filter(item => item.is_present);\n    const highSeverity = presentDefects.filter(item => item.severity === 'High').length;\n    const mediumSeverity = presentDefects.filter(item => item.severity === 'Medium').length;\n    \n    if (presentDefects.length === 0) return { status: 'PASS', color: 'green', message: 'No defects detected' };\n    if (highSeverity > 0) return { status: 'FAIL', color: 'red', message: `${highSeverity} high severity defect(s)` };\n    if (mediumSeverity > 0) return { status: 'WARNING', color: 'yellow', message: `${mediumSeverity} medium severity defect(s)` };\n    return { status: 'MINOR', color: 'blue', message: 'Minor defects detected' };\n  };\n\n  const overallStatus = getOverallStatus();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2 flex items-center gap-2\">\n            <Camera className=\"text-blue-600\" />\n            PCB Defect Detection System\n          </h1>\n          <p className=\"text-gray-600 mb-6\">\n            Upload a PCB image to detect defects: missing holes, mouse bites, open circuits, shorts, spurs, and spurious copper\n          </p>\n\n          {/* Upload Section */}\n          <div className=\"mb-6\">\n            <div className=\"flex items-center gap-4 mb-4\">\n              <label className=\"flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\">\n                <Upload size={20} />\n                Upload PCB Image\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageUpload}\n                  className=\"hidden\"\n                />\n              </label>\n              \n              {image && (\n                <button\n                  onClick={clearImage}\n                  className=\"flex items-center gap-2 bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  <X size={20} />\n                  Clear\n                </button>\n              )}\n            </div>\n\n            {error && (\n              <div className=\"flex items-center gap-2 bg-red-100 text-red-700 p-3 rounded-lg mb-4\">\n                <AlertCircle size={20} />\n                {error}\n              </div>\n            )}\n          </div>\n\n          {/* Image Preview and Detection */}\n          {imagePreview && (\n            <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n              {/* Image Display */}\n              <div className=\"xl:col-span-1 space-y-4\">\n                <div className=\"relative inline-block\">\n                  <img\n                    id=\"pcb-image\"\n                    src={imagePreview}\n                    alt=\"PCB\"\n                    className=\"w-full max-w-md h-auto rounded-lg shadow-md\"\n                    style={{ maxHeight: '400px', objectFit: 'contain' }}\n                  />\n                  \n                  {/* Bounding boxes overlay */}\n                  {rawDetections.map((detection, index) => {\n                    const imageElement = document.getElementById('pcb-image');\n                    const boxStyle = getBoundingBoxStyle(detection.bbox, imageElement);\n                    \n                    return (\n                      <div\n                        key={index}\n                        style={boxStyle}\n                        className=\"pointer-events-none\"\n                      >\n                        <div \n                          className=\"absolute -top-6 left-0 text-xs font-bold px-1 py-0.5 rounded text-white whitespace-nowrap\"\n                          style={{ backgroundColor: defectColors[detection.class] || '#FF0000' }}\n                        >\n                          {detection.class ? detection.class.replace('_', ' ') : 'Unknown'} ({(detection.confidence * 100).toFixed(1)}%)\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <button\n                  onClick={detectDefects}\n                  disabled={loading}\n                  className=\"w-full bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\"\n                >\n                  {loading ? (\n                    <>\n                      <Loader2 className=\"animate-spin\" size={20} />\n                      Detecting Defects...\n                    </>\n                  ) : (\n                    <>\n                      <CheckCircle size={20} />\n                      Detect Defects\n                    </>\n                  )}\n                </button>\n              </div>\n\n              {/* Overall Status */}\n              <div className=\"xl:col-span-2 space-y-6\">\n                {allClassesSummary.length > 0 && (\n                  <div className={`p-4 rounded-lg border-2 ${\n                    overallStatus.color === 'green' ? 'bg-green-50 border-green-200' :\n                    overallStatus.color === 'red' ? 'bg-red-50 border-red-200' :\n                    overallStatus.color === 'yellow' ? 'bg-yellow-50 border-yellow-200' :\n                    'bg-blue-50 border-blue-200'\n                  }`}>\n                    <div className=\"flex items-center gap-3\">\n                      <div className={`text-2xl font-bold ${\n                        overallStatus.color === 'green' ? 'text-green-600' :\n                        overallStatus.color === 'red' ? 'text-red-600' :\n                        overallStatus.color === 'yellow' ? 'text-yellow-600' :\n                        'text-blue-600'\n                      }`}>\n                        {overallStatus.status}\n                      </div>\n                      <div className=\"text-gray-700\">\n                        {overallStatus.message}\n                      </div>\n                    </div>\n                    <div className=\"text-sm text-gray-600 mt-2\">\n                      Total raw detections: {totalDetections}\n                    </div>\n                  </div>\n                )}\n\n                {/* All Classes Summary */}\n                {allClassesSummary.length > 0 && (\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-xl font-semibold text-gray-800\">\n                      Defect Analysis Summary\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {allClassesSummary.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`p-4 rounded-lg border-2 ${\n                            item.is_present ? 'bg-red-50 border-red-200' : 'bg-green-50 border-green-200'\n                          }`}\n                        >\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              {getStatusIcon(item.is_present, item.severity)}\n                              <h4 className=\"font-semibold text-gray-800 capitalize\">\n                                {item.class.replace('_', ' ')}\n                              </h4>\n                            </div>\n                            <span className={`text-sm font-medium px-2 py-1 rounded ${\n                              item.severity === 'High' ? 'bg-red-100 text-red-800' :\n                              item.severity === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              item.severity === 'Low' ? 'bg-blue-100 text-blue-800' :\n                              'bg-gray-100 text-gray-800'\n                            }`}>\n                              {item.severity}\n                            </span>\n                          </div>\n                          <div className=\"text-sm text-gray-600\">\n                            {item.is_present ? (\n                              <>\n                                <div>Max Confidence: {(item.confidence * 100).toFixed(1)}%</div>\n                                <div>Avg Confidence: {(item.average_confidence * 100).toFixed(1)}%</div>\n                                <div>Detections: {item.detection_count}</div>\n                              </>\n                            ) : (\n                              <div>No defects detected</div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Legend */}\n                <div className=\"mt-6\">\n                  <h4 className=\"font-semibold text-gray-800 mb-3\">Defect Types Legend</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                    {Object.entries(defectColors).map(([defect, color]) => (\n                      <div key={defect} className=\"flex items-center gap-2\">\n                        <div \n                          className=\"w-4 h-4 rounded border\"\n                          style={{ backgroundColor: color }}\n                        ></div>\n                        <span className=\"text-sm capitalize\">\n                          {defect.replace('_', ' ')}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PCBDefectDetector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}