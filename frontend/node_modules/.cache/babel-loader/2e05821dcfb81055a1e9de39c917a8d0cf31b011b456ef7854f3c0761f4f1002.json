{"ast":null,"code":"var _jsxFileName = \"E:\\\\pcb-defect-detector\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Upload, Camera, AlertCircle, CheckCircle, Loader2, X, Zap, Eye, Target, BarChart3, Download, RefreshCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PCBDefectDetector = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState({\n    width: 640,\n    height: 640\n  });\n  const [showBoundingBoxes, setShowBoundingBoxes] = useState(true);\n  const [processingTime, setProcessingTime] = useState(0);\n  const fileInputRef = useRef(null);\n  const imageRef = useRef(null);\n  const defectColors = {\n    missing_hole: '#FF6B6B',\n    mouse_bite: '#4ECDC4',\n    open_circuit: '#45B7D1',\n    short: '#FFA07A',\n    spur: '#98D8C8',\n    spurious_copper: '#F7DC6F'\n  };\n  const defectDescriptions = {\n    missing_hole: 'A hole that should be present in the PCB is missing',\n    mouse_bite: 'Small semi-circular notches along the board edges',\n    open_circuit: 'Break in the conductive path preventing current flow',\n    short: 'Unintended connection between conductors',\n    spur: 'Unwanted protrusion of copper material',\n    spurious_copper: 'Excess copper material where it shouldn\\'t be'\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImage(e.target.result);\n        setImagePreview(e.target.result);\n        setDetections([]);\n        setError(null);\n        setProcessingTime(0);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const detectDefects = async () => {\n    if (!image) return;\n    setLoading(true);\n    setError(null);\n    const startTime = performance.now();\n    try {\n      const formData = new FormData();\n      const blob = await fetch(image).then(res => res.blob());\n      formData.append('image', blob, 'pcb_image.png');\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      const endTime = performance.now();\n      setProcessingTime(((endTime - startTime) / 1000).toFixed(2));\n      if (response.ok) {\n        setDetections(data.predictions || []);\n        if (data.image_dimensions) {\n          setImageDimensions(data.image_dimensions);\n        }\n      } else {\n        setError(data.error || 'Detection failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to the backend. Make sure Flask server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearImage = () => {\n    setImage(null);\n    setImagePreview(null);\n    setDetections([]);\n    setError(null);\n    setImageDimensions({\n      width: 640,\n      height: 640\n    });\n    setProcessingTime(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const getBoundingBoxStyle = (bbox, imageElement) => {\n    if (!imageElement) return {};\n    const imageRect = imageElement.getBoundingClientRect();\n    const scaleX = imageRect.width / imageDimensions.width;\n    const scaleY = imageRect.height / imageDimensions.height;\n    return {\n      position: 'absolute',\n      left: bbox.x1 * scaleX,\n      top: bbox.y1 * scaleY,\n      width: (bbox.x2 - bbox.x1) * scaleX,\n      height: (bbox.y2 - bbox.y1) * scaleY,\n      border: `3px solid ${defectColors[bbox.class] || '#FF0000'}`,\n      backgroundColor: `${defectColors[bbox.class] || '#FF0000'}15`,\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      animation: 'pulse 2s infinite'\n    };\n  };\n  const getDefectStats = () => {\n    const stats = {};\n    detections.forEach(detection => {\n      stats[detection.class] = (stats[detection.class] || 0) + 1;\n    });\n    return stats;\n  };\n  const downloadReport = () => {\n    const stats = getDefectStats();\n    const report = {\n      timestamp: new Date().toISOString(),\n      processingTime: processingTime,\n      totalDefects: detections.length,\n      defectStats: stats,\n      detections: detections.map(d => ({\n        type: d.class,\n        confidence: d.confidence,\n        location: d.bbox\n      }))\n    };\n    const blob = new Blob([JSON.stringify(report, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `pcb_defect_report_${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-icon\",\n            children: /*#__PURE__*/_jsxDEV(Zap, {\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"header-title\",\n            children: \"PCB Defect Detection System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header-subtitle\",\n          children: \"Advanced AI-powered PCB quality control system. Upload your PCB image to detect manufacturing defects with high precision.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"glass-card upload-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: [/*#__PURE__*/_jsxDEV(Upload, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), \"Image Upload\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), processingTime > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"processing-time\",\n                children: [\"Processing time: \", processingTime, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload-button\",\n                children: [/*#__PURE__*/_jsxDEV(Camera, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), \"Choose PCB Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: fileInputRef,\n                  type: \"file\",\n                  accept: \"image/*\",\n                  onChange: handleImageUpload\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), image && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: clearImage,\n                className: \"clear-button\",\n                children: [/*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), \"Clear\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), detections.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: downloadReport,\n                className: \"report-button\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), \"Report\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    ref: imageRef,\n                    src: imagePreview,\n                    alt: \"PCB\",\n                    className: \"pcb-image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), showBoundingBoxes && detections.map((detection, index) => {\n                    const imageElement = imageRef.current;\n                    const boxStyle = getBoundingBoxStyle(detection.bbox, imageElement);\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: boxStyle,\n                      className: \"bounding-box\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"bounding-box-label\",\n                        style: {\n                          backgroundColor: defectColors[detection.class] || '#FF0000'\n                        },\n                        children: [detection.class ? detection.class.replace('_', ' ') : 'Unknown', \" (\", (detection.confidence * 100).toFixed(1), \"%)\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 29\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: showBoundingBoxes,\n                    onChange: e => setShowBoundingBoxes(e.target.checked)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Eye, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Show Bounding Boxes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: detectDefects,\n                  disabled: loading,\n                  className: \"detect-button\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                      className: \"animate-spin\",\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 27\n                    }, this), \"Analyzing...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Target, {\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 27\n                    }, this), \"Detect Defects\"]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"stats-title\",\n              children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), \"Detection Summary\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item total\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Defects\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: detections.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), Object.entries(getDefectStats()).map(([defect, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `stat-item defect-${defect}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stat-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stat-color-dot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stat-text\",\n                    children: defect.replace('_', ' ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)]\n              }, defect, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"results-title\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), \"Detection Results\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), detections.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-results\",\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                size: 48\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-results-title\",\n                children: loading ? 'Analyzing PCB...' : 'No defects detected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"no-results-subtitle\",\n                children: loading ? 'Please wait while we process your image' : 'Upload an image and click \"Detect Defects\" to analyze'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results-list\",\n              children: detections.map((detection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `detection-card defect-${detection.class}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detection-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detection-type\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detection-type-dot\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"detection-type-name\",\n                      children: detection.class ? detection.class.replace('_', ' ') : 'Unknown'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detection-confidence\",\n                    children: [(detection.confidence * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"detection-description\",\n                  children: defectDescriptions[detection.class] || 'Unknown defect type'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detection-position\",\n                  children: [\"Position: (\", detection.bbox.x1.toFixed(0), \", \", detection.bbox.y1.toFixed(0), \") - (\", detection.bbox.x2.toFixed(0), \", \", detection.bbox.y2.toFixed(0), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"legend-title\",\n              children: \"Defect Types Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-list\",\n              children: Object.entries(defectColors).map(([defect, color]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"legend-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"legend-color\",\n                  style: {\n                    backgroundColor: color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"legend-text\",\n                  children: defect.replace('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this)]\n              }, defect, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(PCBDefectDetector, \"6Qlm9YDcZkL58c8ehOM+WPgwBx4=\");\n_c = PCBDefectDetector;\nexport default PCBDefectDetector;\nvar _c;\n$RefreshReg$(_c, \"PCBDefectDetector\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Upload","Camera","AlertCircle","CheckCircle","Loader2","X","Zap","Eye","Target","BarChart3","Download","RefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","PCBDefectDetector","_s","image","setImage","imagePreview","setImagePreview","detections","setDetections","loading","setLoading","error","setError","imageDimensions","setImageDimensions","width","height","showBoundingBoxes","setShowBoundingBoxes","processingTime","setProcessingTime","fileInputRef","imageRef","defectColors","missing_hole","mouse_bite","open_circuit","short","spur","spurious_copper","defectDescriptions","handleImageUpload","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","detectDefects","startTime","performance","now","formData","FormData","blob","fetch","then","res","append","response","method","body","data","json","endTime","toFixed","ok","predictions","image_dimensions","err","console","clearImage","current","value","getBoundingBoxStyle","bbox","imageElement","imageRect","getBoundingClientRect","scaleX","scaleY","position","left","x1","top","y1","x2","y2","border","class","backgroundColor","borderRadius","pointerEvents","animation","getDefectStats","stats","forEach","detection","downloadReport","report","timestamp","Date","toISOString","totalDefects","length","defectStats","map","d","type","confidence","location","Blob","JSON","stringify","url","URL","createObjectURL","a","document","createElement","href","download","split","click","revokeObjectURL","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","onClick","src","alt","index","boxStyle","style","replace","checked","disabled","Object","entries","defect","count","color","_c","$RefreshReg$"],"sources":["E:/pcb-defect-detector/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Upload, Camera, AlertCircle, CheckCircle, Loader2, X, Zap, Eye, Target, BarChart3, Download, RefreshCw } from 'lucide-react';\n\nconst PCBDefectDetector = () => {\n  const [image, setImage] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [imageDimensions, setImageDimensions] = useState({ width: 640, height: 640 });\n  const [showBoundingBoxes, setShowBoundingBoxes] = useState(true);\n  const [processingTime, setProcessingTime] = useState(0);\n  const fileInputRef = useRef(null);\n  const imageRef = useRef(null);\n\n  const defectColors = {\n    missing_hole: '#FF6B6B',\n    mouse_bite: '#4ECDC4',\n    open_circuit: '#45B7D1',\n    short: '#FFA07A',\n    spur: '#98D8C8',\n    spurious_copper: '#F7DC6F'\n  };\n\n  const defectDescriptions = {\n    missing_hole: 'A hole that should be present in the PCB is missing',\n    mouse_bite: 'Small semi-circular notches along the board edges',\n    open_circuit: 'Break in the conductive path preventing current flow',\n    short: 'Unintended connection between conductors',\n    spur: 'Unwanted protrusion of copper material',\n    spurious_copper: 'Excess copper material where it shouldn\\'t be'\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n        setImagePreview(e.target.result);\n        setDetections([]);\n        setError(null);\n        setProcessingTime(0);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const detectDefects = async () => {\n    if (!image) return;\n\n    setLoading(true);\n    setError(null);\n    const startTime = performance.now();\n\n    try {\n      const formData = new FormData();\n      const blob = await fetch(image).then(res => res.blob());\n      formData.append('image', blob, 'pcb_image.png');\n\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n      const endTime = performance.now();\n      setProcessingTime(((endTime - startTime) / 1000).toFixed(2));\n\n      if (response.ok) {\n        setDetections(data.predictions || []);\n        if (data.image_dimensions) {\n          setImageDimensions(data.image_dimensions);\n        }\n      } else {\n        setError(data.error || 'Detection failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to the backend. Make sure Flask server is running.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearImage = () => {\n    setImage(null);\n    setImagePreview(null);\n    setDetections([]);\n    setError(null);\n    setImageDimensions({ width: 640, height: 640 });\n    setProcessingTime(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const getBoundingBoxStyle = (bbox, imageElement) => {\n    if (!imageElement) return {};\n    \n    const imageRect = imageElement.getBoundingClientRect();\n    const scaleX = imageRect.width / imageDimensions.width;\n    const scaleY = imageRect.height / imageDimensions.height;\n    \n    return {\n      position: 'absolute',\n      left: bbox.x1 * scaleX,\n      top: bbox.y1 * scaleY,\n      width: (bbox.x2 - bbox.x1) * scaleX,\n      height: (bbox.y2 - bbox.y1) * scaleY,\n      border: `3px solid ${defectColors[bbox.class] || '#FF0000'}`,\n      backgroundColor: `${defectColors[bbox.class] || '#FF0000'}15`,\n      borderRadius: '4px',\n      pointerEvents: 'none',\n      animation: 'pulse 2s infinite'\n    };\n  };\n\n  const getDefectStats = () => {\n    const stats = {};\n    detections.forEach(detection => {\n      stats[detection.class] = (stats[detection.class] || 0) + 1;\n    });\n    return stats;\n  };\n\n  const downloadReport = () => {\n    const stats = getDefectStats();\n    const report = {\n      timestamp: new Date().toISOString(),\n      processingTime: processingTime,\n      totalDefects: detections.length,\n      defectStats: stats,\n      detections: detections.map(d => ({\n        type: d.class,\n        confidence: d.confidence,\n        location: d.bbox\n      }))\n    };\n    \n    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `pcb_defect_report_${new Date().toISOString().split('T')[0]}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"main-wrapper\">\n        {/* Header */}\n        <div className=\"app-header\">\n          <div className=\"header-title-wrapper\">\n            <div className=\"header-icon\">\n              <Zap size={32} />\n            </div>\n            <h1 className=\"header-title\">\n              PCB Defect Detection System\n            </h1>\n          </div>\n          <p className=\"header-subtitle\">\n            Advanced AI-powered PCB quality control system. Upload your PCB image to detect manufacturing defects with high precision.\n          </p>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"content-grid\">\n          {/* Upload and Image Section */}\n          <div className=\"left-column\">\n            {/* Upload Section */}\n            <div className=\"glass-card upload-section\">\n              <div className=\"section-header\">\n                <h2 className=\"section-title\">\n                  <Upload size={24} />\n                  Image Upload\n                </h2>\n                {processingTime > 0 && (\n                  <div className=\"processing-time\">\n                    Processing time: {processingTime}s\n                  </div>\n                )}\n              </div>\n\n              <div className=\"upload-controls\">\n                <label className=\"upload-button\">\n                  <Camera size={20} />\n                  Choose PCB Image\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                  />\n                </label>\n                \n                {image && (\n                  <button\n                    onClick={clearImage}\n                    className=\"clear-button\"\n                  >\n                    <X size={20} />\n                    Clear\n                  </button>\n                )}\n\n                {detections.length > 0 && (\n                  <button\n                    onClick={downloadReport}\n                    className=\"report-button\"\n                  >\n                    <Download size={20} />\n                    Report\n                  </button>\n                )}\n              </div>\n\n              {error && (\n                <div className=\"error-message\">\n                  <AlertCircle size={20} />\n                  {error}\n                </div>\n              )}\n\n              {/* Image Display */}\n              {imagePreview && (\n                <div className=\"image-display\">\n                  <div className=\"image-container\">\n                    <div className=\"image-wrapper\">\n                      <img\n                        ref={imageRef}\n                        src={imagePreview}\n                        alt=\"PCB\"\n                        className=\"pcb-image\"\n                      />\n                      \n                      {/* Bounding boxes overlay */}\n                      {showBoundingBoxes && detections.map((detection, index) => {\n                        const imageElement = imageRef.current;\n                        const boxStyle = getBoundingBoxStyle(detection.bbox, imageElement);\n                        \n                        return (\n                          <div key={index} style={boxStyle} className=\"bounding-box\">\n                            <div \n                              className=\"bounding-box-label\"\n                              style={{ backgroundColor: defectColors[detection.class] || '#FF0000' }}\n                            >\n                              {detection.class ? detection.class.replace('_', ' ') : 'Unknown'} ({(detection.confidence * 100).toFixed(1)}%)\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n\n                  {/* Controls */}\n                  <div className=\"image-controls\">\n                    <div className=\"checkbox-wrapper\">\n                      <input\n                        type=\"checkbox\"\n                        checked={showBoundingBoxes}\n                        onChange={(e) => setShowBoundingBoxes(e.target.checked)}\n                      />\n                      <Eye size={16} />\n                      <label>Show Bounding Boxes</label>\n                    </div>\n\n                    <button\n                      onClick={detectDefects}\n                      disabled={loading}\n                      className=\"detect-button\"\n                    >\n                      {loading ? (\n                        <>\n                          <Loader2 className=\"animate-spin\" size={20} />\n                          Analyzing...\n                        </>\n                      ) : (\n                        <>\n                          <Target size={20} />\n                          Detect Defects\n                        </>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Results Section */}\n          <div className=\"right-column\">\n            {/* Statistics */}\n            <div className=\"stats-section\">\n              <h3 className=\"stats-title\">\n                <BarChart3 size={20} />\n                Detection Summary\n              </h3>\n              \n              <div className=\"stats-list\">\n                <div className=\"stat-item total\">\n                  <span className=\"stat-label\">Total Defects</span>\n                  <span className=\"stat-value\">{detections.length}</span>\n                </div>\n                \n                {Object.entries(getDefectStats()).map(([defect, count]) => (\n                  <div key={defect} className={`stat-item defect-${defect}`}>\n                    <div className=\"stat-label\">\n                      <div className=\"stat-color-dot\" />\n                      <span className=\"stat-text\">{defect.replace('_', ' ')}</span>\n                    </div>\n                    <span className=\"stat-value\">{count}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Detection Results */}\n            <div className=\"results-section\">\n              <h3 className=\"results-title\">\n                <CheckCircle size={20} />\n                Detection Results\n              </h3>\n\n              {detections.length === 0 ? (\n                <div className=\"no-results\">\n                  <Target size={48} />\n                  <div className=\"no-results-title\">\n                    {loading ? 'Analyzing PCB...' : 'No defects detected'}\n                  </div>\n                  <p className=\"no-results-subtitle\">\n                    {loading ? 'Please wait while we process your image' : 'Upload an image and click \"Detect Defects\" to analyze'}\n                  </p>\n                </div>\n              ) : (\n                <div className=\"results-list\">\n                  {detections.map((detection, index) => (\n                    <div\n                      key={index}\n                      className={`detection-card defect-${detection.class}`}\n                    >\n                      <div className=\"detection-header\">\n                        <div className=\"detection-type\">\n                          <div className=\"detection-type-dot\" />\n                          <h4 className=\"detection-type-name\">\n                            {detection.class ? detection.class.replace('_', ' ') : 'Unknown'}\n                          </h4>\n                        </div>\n                        <span className=\"detection-confidence\">\n                          {(detection.confidence * 100).toFixed(1)}%\n                        </span>\n                      </div>\n                      \n                      <p className=\"detection-description\">\n                        {defectDescriptions[detection.class] || 'Unknown defect type'}\n                      </p>\n                      \n                      <div className=\"detection-position\">\n                        Position: ({detection.bbox.x1.toFixed(0)}, {detection.bbox.y1.toFixed(0)}) - \n                        ({detection.bbox.x2.toFixed(0)}, {detection.bbox.y2.toFixed(0)})\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Legend */}\n            <div className=\"legend-section\">\n              <h4 className=\"legend-title\">Defect Types Legend</h4>\n              <div className=\"legend-list\">\n                {Object.entries(defectColors).map(([defect, color]) => (\n                  <div key={defect} className=\"legend-item\">\n                    <div \n                      className=\"legend-color\"\n                      style={{ backgroundColor: color }}\n                    />\n                    <span className=\"legend-text\">\n                      {defect.replace('_', ' ')}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PCBDefectDetector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}